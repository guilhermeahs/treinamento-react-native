import React, { useState } from "react";
import {
  Alert,
  Image,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Modal,
} from "react-native";
import QRCode from "react-native-qrcode-svg"; // Biblioteca para gerar QR Code

const menu = {
  poster:
    "https://static.ifood-static.com.br/image/upload/t_medium/pratos/5aa01d8e-8982-4d9b-b368-2325d3b5b04a/202504161727_81IJ_i.jpg",
  sides: [
    { label: "Fritas", price: null },
    { label: "Anéis de cebola", price: 1.85 },
    { label: "Cebola roxa", price: null },
    { label: "Batata doce frita", price: 2.95 },
    { label: "Sem nada", price: null },
  ],
  pontos: [
    "Bem passado",
    "Passado",
    "Ao ponto",
    "Mal passado",
    "Super mal passado",
  ],
  pagamentos: ["Cartão", "Dinheiro", "Pix"],
};

const BASE_PRICE = 35.9;

export default function PedidoCombo() {
  const [form, setForm] = useState({
    side: "",
    ponto: "",
    pagamento: "",
    endereco: "",
  });

  const [showQR, setShowQR] = useState(false);

  const selectedSide = menu.sides.find((item) => item.label === form.side);
  const sidePrice = selectedSide?.price || 0;
  const totalPrice = BASE_PRICE + sidePrice;

  // Código fictício de pagamento PIX
  const codigoPix = `PIX-${Math.random().toString(36).substring(2, 10)}-${Date.now()}`;

  const handlePedido = () => {
    if (!form.side || !form.ponto || !form.pagamento || !form.endereco) {
      Alert.alert("Erro", "Por favor, selecione todas as opções do pedido e adicione seu endereço.");
      return;
    }

    if (form.pagamento === "Pix") {
      setShowQR(true); // Abre modal do QR Code
    } else {
      Alert.alert(
        "Pedido Realizado!",
        `Endereço: ${form.endereco}\nAcompanhamento: ${form.side}\nPonto da carne: ${form.ponto}\nForma de pagamento: ${form.pagamento}\nTempo de entrega: 30 a 60 min\nTotal: R$ ${totalPrice.toFixed(2)}`
      );
    }
  };

  return (
    <View style={{ flex: 1, backgroundColor: "#f7f7f7" }}>
      <ScrollView>
        <Image source={{ uri: menu.poster }} style={styles.poster} />

        <Section
          title="Combo Chicken Bacon"
          subtitle={`Preço base: R$ ${BASE_PRICE.toFixed(2)}`}
        />

        {/* Campo Endereço */}
        <Section title="Endereço de Entrega" obrigatorio>
          <TextInput
            style={styles.input}
            placeholder="Digite seu endereço"
            value={form.endereco}
            onChangeText={(text) => setForm({ ...form, endereco: text })}
          />
        </Section>

        {/* Acompanhamentos */}
        <Section title="Acompanhamentos" obrigatorio>
          {menu.sides.map(({ label, price }, index) => {
            const isActive = form.side === label;
            return (
              <TouchableOpacity
                key={index}
                onPress={() => setForm({ ...form, side: label })}
              >
                <View style={[styles.radio, index === 0 && { borderTopWidth: 0 }]}>
                  <View
                    style={[styles.radioInput, isActive && styles.radioInputActive]}
                  />
                  <Text style={styles.radioLabel}>{label}</Text>
                  {price !== null && (
                    <Text style={styles.radioPrice}>+R$ {price.toFixed(2)}</Text>
                  )}
                </View>
              </TouchableOpacity>
            );
          })}
        </Section>

        {/* Ponto da Carne */}
        <Section title="Ponto da carne" obrigatorio>
          {menu.pontos.map((label, index) => {
            const isActive = form.ponto === label;
            return (
              <TouchableOpacity
                key={index}
                onPress={() => setForm({ ...form, ponto: label })}
              >
                <View style={[styles.radio, index === 0 && { borderTopWidth: 0 }]}>
                  <View
                    style={[styles.radioInput, isActive && styles.radioInputActive]}
                  />
                  <Text style={styles.radioLabel}>{label}</Text>
                </View>
              </TouchableOpacity>
            );
          })}
        </Section>

        {/* Forma de Pagamento */}
        <Section title="Forma de Pagamento" obrigatorio>
          {menu.pagamentos.map((label, index) => {
            const isActive = form.pagamento === label;
            return (
              <TouchableOpacity
                key={index}
                onPress={() => setForm({ ...form, pagamento: label })}
              >
                <View style={[styles.radio, index === 0 && { borderTopWidth: 0 }]}>
                  <View
                    style={[styles.radioInput, isActive && styles.radioInputActive]}
                  />
                  <Text style={styles.radioLabel}>{label}</Text>
                </View>
              </TouchableOpacity>
            );
          })}
        </Section>

        {/* Botão Pedido */}
        <View style={styles.footer}>
          <TouchableOpacity style={styles.button} onPress={handlePedido}>
            <Text style={styles.buttonText}>
              Fazer Pedido — Total: R$ {totalPrice.toFixed(2)}
            </Text>
          </TouchableOpacity>
        </View>
      </ScrollView>

      {/* Modal QR Code */}
      <Modal visible={showQR} transparent animationType="slide">
        <View style={styles.modalOverlay}>
          <View style={styles.modalContent}>
            <Text style={styles.modalTitle}>Pagamento via Pix</Text>
            <QRCode value={codigoPix} size={200} />
            <Text style={styles.paymentCode}>{codigoPix}</Text>
            <Text style={styles.modalSubtitle}>Total: R$ {totalPrice.toFixed(2)}</Text>
            <Text style={styles.modalSubtitle}>Tempo de entrega: 30 a 60 min</Text>
            <TouchableOpacity
              style={[styles.button, { marginTop: 20 }]}
              onPress={() => {
                setShowQR(false);
                Alert.alert("Pedido Confirmado!", "Seu pagamento foi processado com sucesso!");
              }}
            >
              <Text style={styles.buttonText}>Confirmar Pagamento</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </View>
  );
}

function Section({ title, subtitle, obrigatorio, children }) {
  return (
    <View style={styles.section}>
      <View style={styles.sectionHeader}>
        <View>
          <Text style={styles.sectionTitle}>{title}</Text>
          {subtitle && <Text style={styles.sectionSubtitle}>{subtitle}</Text>}
        </View>
        {obrigatorio && (
          <View style={styles.sectionBadge}>
            <Text style={styles.sectionBadgeText}>Obrigatório</Text>
          </View>
        )}
      </View>
      {children && <View style={styles.sectionOptions}>{children}</View>}
    </View>
  );
}

const styles = StyleSheet.create({
  poster: { width: "100%", height: 300 },
  section: {
    backgroundColor: "#fff",
    paddingVertical: 12,
    paddingHorizontal: 16,
    borderTopWidth: 1,
    borderColor: "#e7e7e7",
    marginBottom: 12,
  },
  sectionHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "flex-start",
  },
  sectionTitle: { fontSize: 17, fontWeight: "600", color: "#1d1d1d", marginBottom: 4 },
  sectionSubtitle: { fontSize: 14, color: "#6d6d6d" },
  sectionBadge: {
    backgroundColor: "#e7e7e7",
    paddingVertical: 4,
    paddingHorizontal: 10,
    borderRadius: 8,
    justifyContent: "center",
  },
  sectionBadgeText: { fontSize: 13, fontWeight: "600", color: "#1d1d1d" },
  sectionOptions: { marginTop: 8 },

  radio: {
    flexDirection: "row",
    alignItems: "center",
    paddingVertical: 12,
    borderTopWidth: 1,
    borderColor: "#e7e7e7",
  },
  radioInput: {
    width: 18,
    height: 18,
    borderWidth: 2,
    borderRadius: 9999,
    borderColor: "#1d1d1d",
    marginRight: 12,
  },
  radioInputActive: { borderWidth: 5, borderColor: "#1d1d1d" },
  radioLabel: { fontSize: 16, fontWeight: "500", color: "#2d2d3a" },
  radioPrice: { fontSize: 14, color: "#6d6d6d", marginLeft: "auto" },

  input: {
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 8,
    padding: 10,
    fontSize: 16,
    marginTop: 8,
  },

  footer: {
    padding: 16,
    backgroundColor: "#fff",
    marginBottom: 32,
    borderTopWidth: 1,
    borderColor: "#e7e7e7",
  },
  button: {
    backgroundColor: "#ff4d30",
    paddingVertical: 14,
    borderRadius: 8,
    alignItems: "center",
  },
  buttonText: { fontSize: 16, fontWeight: "600", color: "#fff" },

  modalOverlay: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "rgba(0,0,0,0.5)",
  },
  modalContent: {
    backgroundColor: "#fff",
    padding: 20,
    borderRadius: 12,
    alignItems: "center",
    width: "80%",
  },
  modalTitle: { fontSize: 20, fontWeight: "700", marginBottom: 20 },
  modalSubtitle: { fontSize: 16, marginTop: 10 },
  paymentCode: {
    fontSize: 14,
    fontWeight: "600",
    marginTop: 12,
    color: "#333",
    textAlign: "center",
  },
});
